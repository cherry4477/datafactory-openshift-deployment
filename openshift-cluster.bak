执行data-backup.sh
cat data-backup.sh
#!/bin/bash

BASEDIR=~/data-backup
rm -fr $BASEDIR/cluster
rm -fr $(ls $BASEDIR/jd-cluster-*| sort -n | head -n 1)
bash $BASEDIR/exports.sh $1 $2
tar_name=$(date +%Y%m%d-%H%M%S)
cd $BASEDIR
tar zcvf $BASEDIR/jd-cluster-${tar_name}.tar.gz cluster
aws s3 cp $BASEDIR/jd-cluster-${tar_name}.tar.gz s3://datafoundry-backup-all/jd-cluster/jd-cluster-${tar_name}.tar.gz


cat exports.sh
#!/bin/bash
BASEDIR=~/data-backup/cluster
OC=/usr/local/bin/oc
$OC login -u $1 -p $2
#export cluster pvs
mkdir ${BASEDIR}
$OC export pv > ${BASEDIR}/pvs.yaml;
mkdir -p ${BASEDIR}/pvs;
for pv in $($OC get pv | sed '1d'| awk '{print $1}'); do
  $OC export pv/${pv}  > ${BASEDIR}/pvs/${pv}.yaml
done

#export cluster role bindings
$OC export clusterrolebindings > ${BASEDIR}/clusterrolebindings.yaml;
mkdir -p ${BASEDIR}/clusterrolebindingss;
for clusterrb in $($OC get clusterrolebindings | sed '1d'| awk '{print $1}'); do
  $OC export clusterrolebinding/${clusterrb} > ${BASEDIR}/clusterrolebindingss/${clusterrb}.yaml
done

#export node
$OC export node > ${BASEDIR}/hosts.yaml;
mkdir -p ${BASEDIR}/nodes;
for node  in $($OC get node | sed '1d'| awk '{print $1}'); do
  $OC export node/${node} > ${BASEDIR}/nodes/${node}.yaml
done

#export scc
$OC export scc > ${BASEDIR}/sccs.yaml;
mkdir -p ${BASEDIR}/sccs;
for scc in $($OC get scc | sed '1d'| awk '{print $1}'); do
  $OC export scc/${scc} > ${BASEDIR}/sccs/${scc}.yaml
done

for project in $($OC get project| grep -v STATUS | awk '{print $1}'); do 
  echo $project;mkdir -p ${BASEDIR}/namespaces/${project};
  # export all resource of namespaces to one file 
  $OC export all -n ${project} > ${BASEDIR}/namespaces/${project}/all.yaml;
  
  # export bc resource of namespace
  $OC export bc -n ${project} > ${BASEDIR}/namespaces/${project}/bcs.yaml;
  mkdir -p ${BASEDIR}/namespaces/${project}/bcs;
  for bc in $($OC get bc -n ${project}| sed '1d'| awk '{print $1}'); do
    $OC export bc/${bc} -n ${project} > ${BASEDIR}/namespaces/${project}/bcs/${bc}.yaml
  done

  # export dc resource of namespace 
  $OC export dc -n ${project} > ${BASEDIR}/namespaces/${project}/bcs.yaml;
  mkdir -p ${BASEDIR}/namespaces/${project}/dcs;
  for dc in $($OC get dc -n ${project}| sed '1d'| awk '{print $1}'); do
    $OC export dc/${dc} -n ${project} > ${BASEDIR}/namespaces/${project}/dcs/${dc}.yaml
  done



  # export pvc resource of namespace 
  $OC export pvc -n ${project} > ${BASEDIR}/namespaces/${project}/pvcs.yaml;
  mkdir -p ${BASEDIR}/namespaces/${project}/pvcs;
  for pvc in $($OC get pvc -n ${project}| sed '1d'| awk '{print $1}'); do
    $OC export pvc/${pvc} -n ${project} > ${BASEDIR}/namespaces/${project}/pvcs/${pvc}.yaml
  done
  

  # export is resource of namespace 
  $OC export is -n ${project} > ${BASEDIR}/namespaces/${project}/iss.yaml;
  mkdir -p ${BASEDIR}/namespaces/${project}/iss;
  for is in $($OC get is -n ${project}| sed '1d'| awk '{print $1}'); do
    $OC export is/${is} -n ${project} > ${BASEDIR}/namespaces/${project}/iss/${is}.yaml
  done

  $OC export configmaps -n ${project} > ${BASEDIR}/namespaces/${project}/configmapss.yaml;
  mkdir -p ${BASEDIR}/namespaces/${project}/configmapss;
  for configmaps in $($OC get configmaps -n ${project}| sed '1d'| awk '{print $1}'); do
    $OC export configmaps/${configmaps} -n ${project} > ${BASEDIR}/namespaces/${project}/configmapss/${configmaps}.yaml
  done


  $OC export rolebindings -n ${project} > ${BASEDIR}/namespaces/${project}/rolebindingss.yaml;
  mkdir -p ${BASEDIR}/namespaces/${project}/rolebindingss;
  for rolebindings in $($OC get rolebindings -n ${project}| sed '1d'| awk '{print $1}'); do
    $OC export rolebindings/${rolebindings} -n ${project} > ${BASEDIR}/namespaces/${project}/rolebindingss/${rolebindings}.yaml
  done
 
  $OC export ds -n ${project} > ${BASEDIR}/namespaces/${project}/dss.yaml;
  mkdir -p ${BASEDIR}/namespaces/${project}/dss;
  for ds in $($OC get ds -n ${project}| sed '1d'| awk '{print $1}'); do
    $OC export ds/${ds} -n ${project} > ${BASEDIR}/namespaces/${project}/dss/${ds}.yaml
  done

  $OC export secret -n ${project} > ${BASEDIR}/namespaces/${project}/secrets.yaml;
  mkdir -p ${BASEDIR}/namespaces/${project}/secrets;
  for secret in $($OC get secret -n ${project}| sed '1d'| awk '{print $1}'); do
    $OC export secret/${secret} -n ${project} > ${BASEDIR}/namespaces/${project}/secrets/${secret}.yaml
  done
done
